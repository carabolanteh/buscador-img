{"version":3,"sources":["components/Error.jsx","components/Formulario.jsx","components/Imagen.jsx","components/ListadoImg.jsx","App.js","reportWebVitals.js","index.js"],"names":["Error","mensaje","className","Formulario","setBusqueda","useState","termino","setTermino","error","setError","onSubmit","e","preventDefault","trim","setTimeout","type","placeholder","onChange","target","value","Imagen","imagen","largeImageURL","likes","previewURL","tags","views","src","alt","href","rel","ListadoImg","imagenes","peticionVacia","map","id","App","busqueda","setImagenes","setPeticionVacia","paginaActual","setPaginaActual","totalPaginas","setTotalPaginas","useEffect","a","imagenesPorPagina","url","fetch","respuesta","json","resultado","total","hits","calcularTotalPaginas","Math","ceil","totalHits","document","querySelector","scrollIntoView","behavior","consultarApi","onClick","nuevaPaginaActual","nuevaPaginaSiguiente","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.cbcbb087.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Error = ({mensaje}) => {\r\n    return (\r\n        <p className=\"my-3 p-4 text-center text-black alert alert-danger\">\r\n            {mensaje}\r\n        </p>\r\n    );\r\n};\r\n\r\nexport default Error;","import {useState} from 'react';\r\nimport Error from './Error';\r\n\r\nconst Formulario = ({setBusqueda}) => {\r\n\r\n    const [termino, setTermino] = useState('');\r\n    const [error, setError] = useState(false);\r\n\r\n\r\n    const buscarImagenes = e => {\r\n        //prevenir el refresh\r\n        e.preventDefault()\r\n        //validar el form\r\n        if(termino.trim() === ''){\r\n            setError(true);\r\n            setTimeout(()=>{\r\n                setError(false);\r\n            }, 1500)\r\n            return;\r\n        }\r\n        // setError(false)\r\n        \r\n        //enviar esta info al comp principal\r\n        setBusqueda(termino);\r\n\r\n\r\n        //limpiar el form\r\n        setTermino('')\r\n    }\r\n\r\n    return (\r\n        <form \r\n            onSubmit={buscarImagenes}\r\n        >\r\n            <div className=\"row\">\r\n                <div className=\"form-group col-md-8\">\r\n                    <input \r\n                        type=\"text\" \r\n                        className=\"form-control form-control-lg\" \r\n                        placeholder=\"Busca una img, ej: 'cafe', 'loro', etc\" \r\n                        onChange={e=>setTermino(e.target.value)}\r\n                        value={termino}\r\n                    />\r\n                </div>\r\n                <div className=\"form-group col-md-4\">\r\n                    <input \r\n                        type=\"submit\" \r\n                        className=\"btn btn-lg btn-danger btn-block\" \r\n                        value=\"buscar\"\r\n                    />\r\n                </div>\r\n            </div>\r\n            {error && <Error mensaje=\"El campo es obligatorio\"/>}\r\n        </form>\r\n        \r\n    );\r\n};\r\n\r\nexport default Formulario;","import React from 'react';\r\n\r\nconst Imagen = ({imagen}) => {\r\n    const {largeImageURL, likes, previewURL, tags, views} = imagen;\r\n    return (\r\n        <div className=\"col-12 col-ms-6 col-md-4 col-lg-3\">\r\n           <div className=\"card mt-5\">\r\n                <img \r\n                    src={previewURL} \r\n                    alt={tags} \r\n                    className=\"card-img-top imagen\"\r\n                />\r\n                <div className=\"card-body\">\r\n                    <p className=\"card-text\">\r\n                        {likes} Likes ‚ù§\r\n                    </p>\r\n                    <p className=\"card-text\">\r\n                        {views} Views üëÅ\r\n                    </p>\r\n                </div>\r\n                <div className=\"card-footer\">\r\n                    <a href={largeImageURL}\r\n                    target=\"_blank\"\r\n                    rel=\"noreferrer\"\r\n                    className=\"btn-primary btn-block\"\r\n                    >Ver Imagen</a>\r\n                </div>\r\n           </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Imagen;","import Imagen from \"./Imagen\";\r\n\r\nconst ListadoImg = ({imagenes, peticionVacia}) => {\r\n    return (\r\n        <div className=\"col-12 p-5 row\">\r\n            {imagenes.map(imagen=>(\r\n                <Imagen\r\n                    key={imagen.id}\r\n                    imagen={imagen}\r\n                />\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ListadoImg;","import { useState, useEffect } from \"react\";\nimport Formulario from \"./components/Formulario\";\nimport ListadoImg from \"./components/ListadoImg\";\nimport Error from \"./components/Error\";\n\n\nconst App = () => {\n\n  const [busqueda, setBusqueda] = useState('');\n  const [imagenes, setImagenes] = useState([]);\n  const [peticionVacia, setPeticionVacia] = useState(false);\n  const [paginaActual, setPaginaActual] = useState(1);\n  const [totalPaginas, setTotalPaginas] = useState(1);\n\n  useEffect(()=>{\n    setPaginaActual(1)\n  }, [busqueda])\n\n  useEffect(()=>{\n    // evitar la peticion de api por default\n    const consultarApi = async () => {\n      if(busqueda === '') return;\n\n      const imagenesPorPagina = 30;\n      const key = '22226357-7b45355267a02d3d9f0391331';\n      const url = `https://pixabay.com/api/?key=${key}&q=${busqueda}&per_page=${imagenesPorPagina}&page=${paginaActual}`;\n\n      const respuesta = await fetch(url);\n      const resultado = await respuesta.json();\n\n      if(resultado.total === 0){\n        setPeticionVacia(true);\n        return;\n      }\n      setPeticionVacia(false);\n      setImagenes(resultado.hits);\n\n      // calculo tot de pag\n\n      const calcularTotalPaginas = Math.ceil(resultado.totalHits / imagenesPorPagina);\n      setTotalPaginas(calcularTotalPaginas)\n\n      // mover la ppantalla al inicio\n\n      const jumbotron = document.querySelector('.jumbotron');\n      jumbotron.scrollIntoView({behavior: 'smooth'});\n\n    }\n    consultarApi();\n  }, [busqueda, paginaActual])\n\n  // ir a la pag anterior\n\n  const paginaAnterior =()=>{\n    const nuevaPaginaActual = paginaActual - 1;\n    //cuando el user vaya hacia atras no pase del 0\n    if(nuevaPaginaActual === 0) return;\n    setPaginaActual(nuevaPaginaActual);\n  }\n\n  // ir a la pag siguiente\n\n  const paginaSiguiente =()=>{\n    const nuevaPaginaSiguiente = paginaActual + 1;\n    //cuando el user vaya hacia adelante no pase de la ultima pagina\n    if(nuevaPaginaSiguiente > totalPaginas) return;\n\n    setPaginaActual(nuevaPaginaSiguiente);\n  }\n\n\n  return (\n    <div className=\"container\">\n      <div className=\"jumbotron\">\n        <p className=\"lead text-center\">\n          Buscador de Imagenes\n        </p>\n        <Formulario \n        setBusqueda={setBusqueda}\n        />\n      </div>\n      <div className=\"row justify-content-center\">\n      {peticionVacia && <Error mensaje=\"No hay datos para mostrar\"/>}\n        <ListadoImg\n          imagenes={imagenes}\n        />\n\n        {(paginaActual === 1) ? null : (\n          <button \n          type=\"button\"\n          className=\"btn btn-info mr-1\"\n          onClick={paginaAnterior}\n          >\n            &laquo; Anterior \n          </button>\n        )}\n        \n        {(paginaActual !== totalPaginas) && (\n          <button \n            type=\"button\"\n            className=\"btn btn-info mr-1\"\n            onClick={paginaSiguiente}\n          >\n            Siguiente &raquo; \n          </button>\n        )}\n       \n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}